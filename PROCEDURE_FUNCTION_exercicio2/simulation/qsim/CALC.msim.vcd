$comment
	File created using the following command:
		vcd file CALC.msim.vcd -direction
$end
$date
	Thu May 12 13:03:42 2022
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module calc_vhd_vec_tst $end
$var wire 1 ! HEX0 [6] $end
$var wire 1 " HEX0 [5] $end
$var wire 1 # HEX0 [4] $end
$var wire 1 $ HEX0 [3] $end
$var wire 1 % HEX0 [2] $end
$var wire 1 & HEX0 [1] $end
$var wire 1 ' HEX0 [0] $end
$var wire 1 ( HEX1 [6] $end
$var wire 1 ) HEX1 [5] $end
$var wire 1 * HEX1 [4] $end
$var wire 1 + HEX1 [3] $end
$var wire 1 , HEX1 [2] $end
$var wire 1 - HEX1 [1] $end
$var wire 1 . HEX1 [0] $end
$var wire 1 / HEX2 [6] $end
$var wire 1 0 HEX2 [5] $end
$var wire 1 1 HEX2 [4] $end
$var wire 1 2 HEX2 [3] $end
$var wire 1 3 HEX2 [2] $end
$var wire 1 4 HEX2 [1] $end
$var wire 1 5 HEX2 [0] $end
$var wire 1 6 HEX3 [6] $end
$var wire 1 7 HEX3 [5] $end
$var wire 1 8 HEX3 [4] $end
$var wire 1 9 HEX3 [3] $end
$var wire 1 : HEX3 [2] $end
$var wire 1 ; HEX3 [1] $end
$var wire 1 < HEX3 [0] $end
$var wire 1 = OUTPUT [5] $end
$var wire 1 > OUTPUT [4] $end
$var wire 1 ? OUTPUT [3] $end
$var wire 1 @ OUTPUT [2] $end
$var wire 1 A OUTPUT [1] $end
$var wire 1 B OUTPUT [0] $end
$var wire 1 C SW [6] $end
$var wire 1 D SW [5] $end
$var wire 1 E SW [4] $end
$var wire 1 F SW [3] $end
$var wire 1 G SW [2] $end
$var wire 1 H SW [1] $end
$var wire 1 I SW [0] $end

$scope module i1 $end
$var wire 1 J gnd $end
$var wire 1 K vcc $end
$var wire 1 L unknown $end
$var wire 1 M devoe $end
$var wire 1 N devclrn $end
$var wire 1 O devpor $end
$var wire 1 P ww_devoe $end
$var wire 1 Q ww_devclrn $end
$var wire 1 R ww_devpor $end
$var wire 1 S ww_SW [6] $end
$var wire 1 T ww_SW [5] $end
$var wire 1 U ww_SW [4] $end
$var wire 1 V ww_SW [3] $end
$var wire 1 W ww_SW [2] $end
$var wire 1 X ww_SW [1] $end
$var wire 1 Y ww_SW [0] $end
$var wire 1 Z ww_HEX0 [6] $end
$var wire 1 [ ww_HEX0 [5] $end
$var wire 1 \ ww_HEX0 [4] $end
$var wire 1 ] ww_HEX0 [3] $end
$var wire 1 ^ ww_HEX0 [2] $end
$var wire 1 _ ww_HEX0 [1] $end
$var wire 1 ` ww_HEX0 [0] $end
$var wire 1 a ww_HEX1 [6] $end
$var wire 1 b ww_HEX1 [5] $end
$var wire 1 c ww_HEX1 [4] $end
$var wire 1 d ww_HEX1 [3] $end
$var wire 1 e ww_HEX1 [2] $end
$var wire 1 f ww_HEX1 [1] $end
$var wire 1 g ww_HEX1 [0] $end
$var wire 1 h ww_HEX2 [6] $end
$var wire 1 i ww_HEX2 [5] $end
$var wire 1 j ww_HEX2 [4] $end
$var wire 1 k ww_HEX2 [3] $end
$var wire 1 l ww_HEX2 [2] $end
$var wire 1 m ww_HEX2 [1] $end
$var wire 1 n ww_HEX2 [0] $end
$var wire 1 o ww_HEX3 [6] $end
$var wire 1 p ww_HEX3 [5] $end
$var wire 1 q ww_HEX3 [4] $end
$var wire 1 r ww_HEX3 [3] $end
$var wire 1 s ww_HEX3 [2] $end
$var wire 1 t ww_HEX3 [1] $end
$var wire 1 u ww_HEX3 [0] $end
$var wire 1 v ww_OUTPUT [5] $end
$var wire 1 w ww_OUTPUT [4] $end
$var wire 1 x ww_OUTPUT [3] $end
$var wire 1 y ww_OUTPUT [2] $end
$var wire 1 z ww_OUTPUT [1] $end
$var wire 1 { ww_OUTPUT [0] $end
$var wire 1 | \HEX0[0]~output_o\ $end
$var wire 1 } \HEX0[1]~output_o\ $end
$var wire 1 ~ \HEX0[2]~output_o\ $end
$var wire 1 !! \HEX0[3]~output_o\ $end
$var wire 1 "! \HEX0[4]~output_o\ $end
$var wire 1 #! \HEX0[5]~output_o\ $end
$var wire 1 $! \HEX0[6]~output_o\ $end
$var wire 1 %! \HEX1[0]~output_o\ $end
$var wire 1 &! \HEX1[1]~output_o\ $end
$var wire 1 '! \HEX1[2]~output_o\ $end
$var wire 1 (! \HEX1[3]~output_o\ $end
$var wire 1 )! \HEX1[4]~output_o\ $end
$var wire 1 *! \HEX1[5]~output_o\ $end
$var wire 1 +! \HEX1[6]~output_o\ $end
$var wire 1 ,! \HEX2[0]~output_o\ $end
$var wire 1 -! \HEX2[1]~output_o\ $end
$var wire 1 .! \HEX2[2]~output_o\ $end
$var wire 1 /! \HEX2[3]~output_o\ $end
$var wire 1 0! \HEX2[4]~output_o\ $end
$var wire 1 1! \HEX2[5]~output_o\ $end
$var wire 1 2! \HEX2[6]~output_o\ $end
$var wire 1 3! \HEX3[0]~output_o\ $end
$var wire 1 4! \HEX3[1]~output_o\ $end
$var wire 1 5! \HEX3[2]~output_o\ $end
$var wire 1 6! \HEX3[3]~output_o\ $end
$var wire 1 7! \HEX3[4]~output_o\ $end
$var wire 1 8! \HEX3[5]~output_o\ $end
$var wire 1 9! \HEX3[6]~output_o\ $end
$var wire 1 :! \OUTPUT[0]~output_o\ $end
$var wire 1 ;! \OUTPUT[1]~output_o\ $end
$var wire 1 <! \OUTPUT[2]~output_o\ $end
$var wire 1 =! \OUTPUT[3]~output_o\ $end
$var wire 1 >! \OUTPUT[4]~output_o\ $end
$var wire 1 ?! \OUTPUT[5]~output_o\ $end
$var wire 1 @! \SW[3]~input_o\ $end
$var wire 1 A! \SW[0]~input_o\ $end
$var wire 1 B! \Add0~0_combout\ $end
$var wire 1 C! \Mult0|mult_core|decoder_node[0][0]~combout\ $end
$var wire 1 D! \SW[6]~input_o\ $end
$var wire 1 E! \Add0~2_combout\ $end
$var wire 1 F! \SW[4]~input_o\ $end
$var wire 1 G! \SW[1]~input_o\ $end
$var wire 1 H! \Add0~1\ $end
$var wire 1 I! \Add0~3_combout\ $end
$var wire 1 J! \Mult0|mult_core|decoder_node[0][1]~combout\ $end
$var wire 1 K! \Mult0|mult_core|decoder_node[1][0]~combout\ $end
$var wire 1 L! \Mult0|mult_core|padder|adder[0]|auto_generated|op_1~0_combout\ $end
$var wire 1 M! \Add0~5_combout\ $end
$var wire 1 N! \SW[5]~input_o\ $end
$var wire 1 O! \SW[2]~input_o\ $end
$var wire 1 P! \Add0~4\ $end
$var wire 1 Q! \Add0~6_combout\ $end
$var wire 1 R! \Mult0|mult_core|decoder_node[0][2]~combout\ $end
$var wire 1 S! \Mult0|mult_core|decoder_node[1][1]~combout\ $end
$var wire 1 T! \Mult0|mult_core|padder|adder[0]|auto_generated|op_1~1\ $end
$var wire 1 U! \Mult0|mult_core|padder|adder[0]|auto_generated|op_1~2_combout\ $end
$var wire 1 V! \Mult0|mult_core|decoder_node[2][0]~combout\ $end
$var wire 1 W! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~0_combout\ $end
$var wire 1 X! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~2_combout\ $end
$var wire 1 Y! \Add0~7\ $end
$var wire 1 Z! \Add0~8_combout\ $end
$var wire 1 [! \Mult0|mult_core|decoder_node[1][2]~combout\ $end
$var wire 1 \! \Mult0|mult_core|padder|adder[0]|auto_generated|op_1~3\ $end
$var wire 1 ]! \Mult0|mult_core|padder|adder[0]|auto_generated|op_1~4_combout\ $end
$var wire 1 ^! \Mult0|mult_core|decoder_node[2][1]~combout\ $end
$var wire 1 _! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~1\ $end
$var wire 1 `! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~3_combout\ $end
$var wire 1 a! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~5_combout\ $end
$var wire 1 b! \Mult0|mult_core|padder|adder[0]|auto_generated|op_1~5\ $end
$var wire 1 c! \Mult0|mult_core|padder|adder[0]|auto_generated|op_1~6_combout\ $end
$var wire 1 d! \Mult0|mult_core|decoder_node[2][2]~combout\ $end
$var wire 1 e! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~4\ $end
$var wire 1 f! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~6_combout\ $end
$var wire 1 g! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~8_combout\ $end
$var wire 1 h! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~7\ $end
$var wire 1 i! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~9_combout\ $end
$var wire 1 j! \Mult0|mult_core|padder|sub_par_add|adder[0]|auto_generated|op_1~11_combout\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0J
1K
xL
1M
1N
1O
1P
1Q
1R
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
05!
06!
07!
08!
09!
1:!
0;!
1<!
0=!
0>!
0?!
1@!
1A!
0B!
1C!
0D!
1E!
0F!
0G!
1H!
1I!
0J!
0K!
0L!
0M!
1N!
0O!
1P!
1Q!
0R!
0S!
0T!
0U!
1V!
1W!
1X!
0Y!
0Z!
0[!
1\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
1e!
0f!
0g!
0h!
0i!
0j!
0C
1D
0E
1F
0G
0H
1I
0!
0"
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
1@
0A
1B
0S
1T
0U
1V
0W
0X
1Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
1y
0z
1{
$end
#500000
1C
1S
1D!
0E!
1M!
1;!
0:!
1z
0{
0B
1A
#1000000
