library ieee;
use ieee.std_logic_1164.all;

entity trabalho is
port (CLOCK_50: in std_logic;
		SW: in std_logic_vector (0 to 1);
		KEY: in std_logic_vector (0 to 1);
		LEDR: out std_logic_vector (0 to 9);
		HEX0: out std_logic_vector (0 to 6);
		HEX1: out std_logic_vector (0 to 6);
		HEX2: out std_logic_vector (0 to 6);
		GPIO_0: out std_logic_vector (0 to 0));
end entity;

architecture func of trabalho is
type estados_t is (S000, S050, S100, S150, S200, S250);
signal estado: estados_t := S000;
signal reset: std_logic;
signal tempo: integer range 0 to 1000000;
signal t_on: integer range 0 to 1000000;
begin
	ciclo: process(CLOCK_50)
	begin
		if CLOCK_50'event and CLOCK_50 = '1' then
			if tempo = 1000000 then
				tempo <= 1;
			else
				tempo <= tempo+1;
			end if;
		end if;
	end process;	

	maquina: process (KEY, SW)
	begin
		if KEY(1) = '0' then
			t_on <= 30000;
			LEDR <= "0000000000";
			HEX0 <= "0000001";
			HEX1 <= "0000001";
			HEX2 <= "0000001";
			estado <= S000;
		elsif falling_edge(KEY(0)) then
			case estado is
				when S000 => -- Estado R$0,00
					LEDR <= "0000000000";
					HEX0 <= "0000001";
					HEX1 <= "0000001";
					HEX2 <= "0000001";
					t_on <= 30000;
					if SW(0) = '1' then
						estado <= S050;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0100100";
						HEX2 <= "0000001";
					elsif SW(1) = '1' then
						estado <= S100;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0000001";
						HEX2 <= "1001111";
					end if;
					
				when S050 => -- Estado R$0,50
					if SW(0) = '1' then
						estado <= S100;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0000001";
						HEX2 <= "1001111";
					elsif SW(1) = '1' then
						estado <= S150;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0100100";
						HEX2 <= "1001111";
					end if;
						
				when S100 => -- Estado R$1,00
					if SW(0) = '1' then
						estado <= S150;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0100100";
						HEX2 <= "1001111";
					elsif SW(1) = '1' then
						estado <= S200;
						LEDR <= "0000001111";
						HEX0 <= "0000001";
						HEX1 <= "0000001";
						HEX2 <= "0010010";
						t_on <= 60000;
					end if;
					
				when S150 => -- Estado R$1,50
					if SW(0) = '1' then
						estado <= S200;
						LEDR <= "0000001111";
						HEX0 <= "0000001";
						HEX1 <= "0000001";
						HEX2 <= "0010010";
						t_on <= 60000;
					elsif SW(1) = '1' then
						estado <= S250;
						LEDR <= "1000001111";
						HEX0 <= "0000001";
						HEX1 <= "0100100";
						HEX2 <= "0000001";
						t_on <= 60000;
					end if;
					
				when S200 => -- Estado R$2,00
					if SW(0) = '1' then
						t_on <= 30000;
						estado <= S050;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0100100";
						HEX2 <= "0000001";
					elsif SW(1) = '1' then
						t_on <= 30000;
						estado <= S100;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0000001";
						HEX2 <= "1001111";
					end if;			
						
				when S250 => -- Estado R$2,50
					if SW(0) = '1' then
						t_on <= 30000;
						estado <= S050;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0100100";
						HEX2 <= "0000001";
					elsif SW(1) = '1' then
						t_on <= 30000;
						estado <= S100;
						LEDR <= "0000000000";
						HEX0 <= "0000001";
						HEX1 <= "0000001";
						HEX2 <= "1001111";
					end if;										
			end case;
		end if;
	end process;
	
	duty: process(tempo)
	begin
		if tempo<=t_on then
			GPIO_0(0) <= '1';
		else
			GPIO_0(0) <= '0';
		end if;
	end process;
	
end architecture;